name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: List root directory contents
      run: ls -la

    - name: Install dependencies
      run: |
        cd /home/runner/work/git-actions-practice/git-actions-practice/DevOpsProject-app
        npm ci

    - name: Build the project
      run: |
        cd /home/runner/work/git-actions-practice/git-actions-practice/DevOpsProject-app
        npm run build --if-present || true  # Continue even if there are errors

    - name: Client-side checking 
      run: |
        cd /home/runner/work/git-actions-practice/git-actions-practice/DevOpsProject-app/client
        npm ci
        npm run build --if-present || true 

    - name: Server-side checking 
      run: |
        cd /home/runner/work/git-actions-practice/git-actions-practice/DevOpsProject-app/server
        npm ci
        npm run build --if-present || true  
    
    - name: Run tests
      run: |
        cd /home/runner/work/git-actions-practice/git-actions-practice/DevOpsProject-app
        npm test || true  

  security-server:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Check out the code
      uses: actions/checkout@v4
      
    - name: Run security scan on server
      run: |
        cd /home/runner/work/git-actions-practice/git-actions-practice/DevOpsProject-app/server
        npm ci
        npm run build --if-present
        npm start &  # Starting the server in the background
        sleep 30
        # Get the IP address of the machine
         IP_ADDRESS=$(hostname -I | awk '{print $1}')
        echo "Server IP address: $IP_ADDRESS"
        # Send a GET request to check if the server is up and running
        until curl --output /dev/null --silent --head --fail http://$IP_ADDRESS:5000; do
          echo 'Waiting for the server to be up...'
          sleep 5
        done
    - name: Test for public javascript library vulnerabilities 
      uses: lirantal/is-website-vulnerable@main
      with:
        scan-url: "http://${{ steps.get-ip.outputs.ip-address }}:5000"  # Using dynamically determined IP

  
  # security-client:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Check out the code
  #     uses: actions/checkout@v4
      
  #   - name: Run security scan on server
  #     run: |
  #       cd /home/runner/work/git-actions-practice/git-actions-practice/DevOpsProject-app/client
  #       npm ci
  #       npm run build --if-present
  #       npm start &  # Starting the server in the background
  #       sleep 10
  #   - name: Test for public javascript library vulnerabilities 
  #     uses: lirantal/is-website-vulnerable@main
  #     with:
  #       scan-url: "http://localhost:5000" 

  #   - name: Upload Security Artifact
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: security-artifact
  #       path: /home/runner/work/git-actions-practice/git-actions-practice/DevOpsProject-app
