name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 20.x ]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: List root directory contents
        run: ls -la

      - name: Install dependencies
        run: |
          cd /home/runner/work/git-actions-practice/git-actions-practice
          npm ci

      - name: Build the project
        run: |
          cd /home/runner/work/git-actions-practice/git-actions-practice/server
          npm run build --if-present || true  # Continue even if there are errors

      - name: Client-side checking
        run: |
          cd /home/runner/work/git-actions-practice/git-actions-practice/client
          npm ci
          npm run build --if-present || true 

      - name: Server-side checking
        run: |
          cd /home/runner/work/git-actions-practice/git-actions-practice
          npm ci
          npm run build --if-present || true  

      - name: Run tests
        run: |
          cd /home/runner/work/git-actions-practice/git-actions-practice
          npm test || true  
  
  snyk_monitorscan:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

        with:
          args: --sarif-file-output=snyk.sarif 
            - name: Upload result to GitHub Code Scanning
              uses: github/codeql-action/upload-sarif@v2
              with:
                json: true
                sarif_file: snyk.sarif

  docker: # New Job, Pushing the project into the docker private repository. 
    runs-on: ubuntu-latest
    needs: snyk_monitorscan

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/devops_project:latest
