name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 20.x ]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build the project
        run: npm run build --if-present || true

      - name: Client-side checking
        run: |
          cd client
          npm ci
          npm run build --if-present || true 

      - name: Server-side checking
        run: |
          cd server
          npm ci
          npm run build --if-present || true  

      - name: Run tests
        run: npm test || true

  snyk_monitorscan:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          json: true

      - name: Upload Snyk Report
        uses: actions/upload-artifact@v4
        with:
          name: snyk-report
          path: snyk.sarif

  docker:
    runs-on: ubuntu-latest
    needs: snyk_monitorscan

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/devops_project:latest
      - name: Set up Docker Compose
        run: docker-compose up -d --build

      - name: Docker compose tests run
        uses: cloudposse/github-action-docker-compose-test-run@0.2.0
        with:
          workdir: .
          file: docker-compose.yml
          service: tests
          command: npm run test
